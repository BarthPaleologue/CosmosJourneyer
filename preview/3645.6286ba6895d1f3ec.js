/*
 *  This file is part of Cosmos Journeyer
 *
 *  Copyright (C) 2024 Barthélemy Paléologue <barth.paleologue@cosmosjourneyer.com>
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Affero General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Affero General Public License for more details.
 *
 *  You should have received a copy of the GNU Affero General Public License
 *  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

"use strict";(globalThis.webpackChunk_cosmos_journeyer_game=globalThis.webpackChunk_cosmos_journeyer_game||[]).push([["3645"],{10668:function(e,t,s){s.r(t),s.d(t,{OpenPBRMaterial:()=>v,OpenPBRMaterialDefines:()=>b});var i=s(24423),r=s(49196),n=s(49330),o=s(28607),a=s(98268),h=s(86880),l=s(93540),u=s(79793),_=s(7741),T=s(42462),A=s(78101),m=s(51566),g=s(59782),p=s(44223),c=s(53626),R=s(63329),E=s(53543),S=s(74314),d=s(69766),f=s(48766),C=s(17465),L=s(64244),I=s(88432),O=s(60657),y=s(78584);let N={effect:null,subMesh:null};class M{populateVectorFromLinkedProperties(e){let t=e.dimension[0];for(let e in this.linkedProperties){let s=this.linkedProperties[e],i=s.numComponents;if(t<i||s.targetUniformComponentOffset>t-i)return void(1==i?f.V.Error(`Float property ${s.name} has an offset that is too large.`):f.V.Error(`Vector${i} property ${s.name} won't fit in Vector${t} or has an offset that is too large.`));"number"==typeof s.value?M._tmpArray[s.targetUniformComponentOffset]=s.value:s.value.toArray(M._tmpArray,s.targetUniformComponentOffset)}e.fromArray(M._tmpArray)}constructor(e,t){this.linkedProperties={},this.name=e,this.numComponents=t}}M._tmpArray=[0,0,0,0];class P{constructor(e,t,s,i,r=0){this.targetUniformComponentNum=4,this.targetUniformComponentOffset=0,this.name=e,this.targetUniformName=s,this.defaultValue=t,this.value=t,this.targetUniformComponentNum=i,this.targetUniformComponentOffset=r}get numComponents(){return"number"==typeof this.defaultValue?1:this.defaultValue.dimension[0]}}class F{get samplerName(){return this.samplerPrefix+"Sampler"}get samplerInfoName(){return"v"+this.samplerPrefix.charAt(0).toUpperCase()+this.samplerPrefix.slice(1)+"Infos"}get samplerMatrixName(){return this.samplerPrefix+"Matrix"}constructor(e,t,s){this.value=null,this.samplerPrefix="",this.textureDefine="",this.name=e,this.samplerPrefix=t,this.textureDefine=s}}class x extends(0,C.F)(A.M){}class b extends(0,m.W)(x){constructor(e){super(e),this.NUM_SAMPLES="0",this.REALTIME_FILTERING=!1,this.IBL_CDF_FILTERING=!1,this.VERTEXCOLOR=!1,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.VERTEXALPHA=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHABLEND=!1,this.ALPHA_FROM_BASE_COLOR_TEXTURE=!1,this.ALPHATESTVALUE="0.5",this.PREMULTIPLYALPHA=!1,this.REFLECTIVITY_GAMMA=!1,this.REFLECTIVITYDIRECTUV=0,this.SPECULARTERM=!1,this.LODBASEDMICROSFURACE=!0,this.METALLICWORKFLOW=!0,this.ROUGHNESSSTOREINMETALMAPALPHA=!1,this.ROUGHNESSSTOREINMETALMAPGREEN=!1,this.METALLNESSSTOREINMETALMAPBLUE=!1,this.AOSTOREINMETALMAPRED=!1,this.SPECULAR_WEIGHT_IN_ALPHA=!1,this.SPECULAR_WEIGHT_FROM_SPECULAR_COLOR_TEXTURE=!1,this.SPECULAR_ROUGHNESS_ANISOTROPY_FROM_TANGENT_TEXTURE=!1,this.COAT_ROUGHNESS_ANISOTROPY_FROM_TANGENT_TEXTURE=!1,this.USE_GLTF_STYLE_ANISOTROPY=!1,this.THIN_FILM_THICKNESS_FROM_THIN_FILM_TEXTURE=!1,this.ENVIRONMENTBRDF=!1,this.ENVIRONMENTBRDF_RGBD=!1,this.FUZZENVIRONMENTBRDF=!1,this.NORMAL=!1,this.TANGENT=!1,this.OBJECTSPACE_NORMALMAP=!1,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.NORMALXYSCALE=!0,this.ANISOTROPIC=!1,this.ANISOTROPIC_OPENPBR=!0,this.ANISOTROPIC_BASE=!1,this.ANISOTROPIC_COAT=!1,this.FUZZ_IBL_SAMPLES=6,this.FUZZ=!1,this.THIN_FILM=!1,this.IRIDESCENCE=!1,this.REFLECTION=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.INVERTCUBICMAP=!1,this.USESPHERICALFROMREFLECTIONMAP=!1,this.USEIRRADIANCEMAP=!1,this.USE_IRRADIANCE_DOMINANT_DIRECTION=!1,this.USESPHERICALINVERTEX=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.LODINREFLECTIONALPHA=!1,this.GAMMAREFLECTION=!1,this.RGBDREFLECTION=!1,this.RADIANCEOCCLUSION=!1,this.HORIZONOCCLUSION=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.NONUNIFORMSCALING=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.USEPHYSICALLIGHTFALLOFF=!1,this.USEGLTFLIGHTFALLOFF=!1,this.TWOSIDEDLIGHTING=!1,this.MIRRORED=!1,this.SHADOWFLOAT=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.POINTSIZE=!1,this.FOG=!1,this.LOGARITHMICDEPTH=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.FORCENORMALFORWARD=!1,this.SPECULARAA=!1,this.UNLIT=!1,this.DECAL_AFTER_DETAIL=!1,this.DEBUGMODE=0,this.CLUSTLIGHT_SLICES=0,this.CLUSTLIGHT_BATCH=0,this.BRDF_V_HEIGHT_CORRELATED=!0,this.MS_BRDF_ENERGY_CONSERVATION=!0,this.SPHERICAL_HARMONICS=!0,this.SPECULAR_GLOSSINESS_ENERGY_CONSERVATION=!0,this.MIX_IBL_RADIANCE_WITH_IRRADIANCE=!0,this.LEGACY_SPECULAR_ENERGY_CONSERVATION=!1,this.BASE_DIFFUSE_MODEL=0,this.DIELECTRIC_SPECULAR_MODEL=1,this.CONDUCTOR_SPECULAR_MODEL=1,this.rebuild()}reset(){super.reset(),this.ALPHATESTVALUE="0.5",this.NORMALXYSCALE=!0}}class D extends(0,I.O)(O.E){}class v extends D{get geometryTangentAngle(){return Math.atan2(this.geometryTangent.y,this.geometryTangent.x)}set geometryTangentAngle(e){this.geometryTangent=new L.I9(Math.cos(e),Math.sin(e))}get geometryCoatTangentAngle(){return Math.atan2(this.geometryCoatTangent.y,this.geometryCoatTangent.x)}set geometryCoatTangentAngle(e){this.geometryCoatTangent=new L.I9(Math.cos(e),Math.sin(e))}get usePhysicalLightFalloff(){return this._lightFalloff===_.i.LIGHTFALLOFF_PHYSICAL}set usePhysicalLightFalloff(e){e!==this.usePhysicalLightFalloff&&(this._markAllSubMeshesAsTexturesDirty(),e?this._lightFalloff=_.i.LIGHTFALLOFF_PHYSICAL:this._lightFalloff=_.i.LIGHTFALLOFF_STANDARD)}get useGLTFLightFalloff(){return this._lightFalloff===_.i.LIGHTFALLOFF_GLTF}set useGLTFLightFalloff(e){e!==this.useGLTFLightFalloff&&(this._markAllSubMeshesAsTexturesDirty(),e?this._lightFalloff=_.i.LIGHTFALLOFF_GLTF:this._lightFalloff=_.i.LIGHTFALLOFF_STANDARD)}get realTimeFiltering(){return this._realTimeFiltering}set realTimeFiltering(e){this._realTimeFiltering=e,this.markAsDirty(1)}get realTimeFilteringQuality(){return this._realTimeFilteringQuality}set realTimeFilteringQuality(e){this._realTimeFilteringQuality=e,this.markAsDirty(1)}get fuzzSampleNumber(){return this._fuzzSampleNumber}set fuzzSampleNumber(e){this._fuzzSampleNumber=e,this.markAsDirty(1)}get canRenderToMRT(){return!0}constructor(e,t,s=!1){for(const i of(super(e,t,void 0,s||v.ForceGLSL),this._baseWeight=new P("base_weight",1,"vBaseWeight",1),this._baseWeightTexture=new F("base_weight","baseWeight","BASE_WEIGHT"),this._baseColor=new P("base_color",a.v9.White(),"vBaseColor",4),this._baseColorTexture=new F("base_color","baseColor","BASE_COLOR"),this._baseDiffuseRoughness=new P("base_diffuse_roughness",0,"vBaseDiffuseRoughness",1),this._baseDiffuseRoughnessTexture=new F("base_diffuse_roughness","baseDiffuseRoughness","BASE_DIFFUSE_ROUGHNESS"),this._baseMetalness=new P("base_metalness",0,"vReflectanceInfo",4,0),this._baseMetalnessTexture=new F("base_metalness","baseMetalness","BASE_METALNESS"),this._specularWeight=new P("specular_weight",1,"vReflectanceInfo",4,3),this._specularWeightTexture=new F("specular_weight","specularWeight","SPECULAR_WEIGHT"),this._specularColor=new P("specular_color",a.v9.White(),"vSpecularColor",4),this._specularColorTexture=new F("specular_color","specularColor","SPECULAR_COLOR"),this._specularRoughness=new P("specular_roughness",.3,"vReflectanceInfo",4,1),this._specularRoughnessTexture=new F("specular_roughness","specularRoughness","SPECULAR_ROUGHNESS"),this._specularRoughnessAnisotropy=new P("specular_roughness_anisotropy",0,"vSpecularAnisotropy",3,2),this._specularRoughnessAnisotropyTexture=new F("specular_roughness_anisotropy","specularRoughnessAnisotropy","SPECULAR_ROUGHNESS_ANISOTROPY"),this._specularIor=new P("specular_ior",1.5,"vReflectanceInfo",4,2),this._coatWeight=new P("coat_weight",0,"vCoatWeight",1,0),this._coatWeightTexture=new F("coat_weight","coatWeight","COAT_WEIGHT"),this._coatColor=new P("coat_color",a.v9.White(),"vCoatColor",3,0),this._coatColorTexture=new F("coat_color","coatColor","COAT_COLOR"),this._coatRoughness=new P("coat_roughness",0,"vCoatRoughness",1,0),this._coatRoughnessTexture=new F("coat_roughness","coatRoughness","COAT_ROUGHNESS"),this._coatRoughnessAnisotropy=new P("coat_roughness_anisotropy",0,"vCoatRoughnessAnisotropy",1),this._coatRoughnessAnisotropyTexture=new F("coat_roughness_anisotropy","coatRoughnessAnisotropy","COAT_ROUGHNESS_ANISOTROPY"),this._coatIor=new P("coat_ior",1.5,"vCoatIor",1,0),this._coatDarkening=new P("coat_darkening",1,"vCoatDarkening",1,0),this._coatDarkeningTexture=new F("coat_darkening","coatDarkening","COAT_DARKENING"),this.useCoatRoughnessFromWeightTexture=!1,this._fuzzWeight=new P("fuzz_weight",0,"vFuzzWeight",1,0),this._fuzzWeightTexture=new F("fuzz_weight","fuzzWeight","FUZZ_WEIGHT"),this._fuzzColor=new P("fuzz_color",a.v9.White(),"vFuzzColor",3,0),this._fuzzColorTexture=new F("fuzz_color","fuzzColor","FUZZ_COLOR"),this._fuzzRoughness=new P("fuzz_roughness",.5,"vFuzzRoughness",1,0),this._fuzzRoughnessTexture=new F("fuzz_roughness","fuzzRoughness","FUZZ_ROUGHNESS"),this._geometryNormalTexture=new F("geometry_normal","geometryNormal","GEOMETRY_NORMAL"),this._geometryTangent=new P("geometry_tangent",new L.I9(1,0),"vSpecularAnisotropy",3,0),this._geometryTangentTexture=new F("geometry_tangent","geometryTangent","GEOMETRY_TANGENT"),this._geometryCoatNormalTexture=new F("geometry_coat_normal","geometryCoatNormal","GEOMETRY_COAT_NORMAL"),this._geometryCoatTangent=new P("geometry_coat_tangent",new L.I9(1,0),"vGeometryCoatTangent",2,0),this._geometryCoatTangentTexture=new F("geometry_coat_tangent","geometryCoatTangent","GEOMETRY_COAT_TANGENT"),this._geometryOpacity=new P("geometry_opacity",1,"vBaseColor",4,3),this._geometryOpacityTexture=new F("geometry_opacity","geometryOpacity","GEOMETRY_OPACITY"),this._emissionLuminance=new P("emission_luminance",1,"vLightingIntensity",4,1),this._emissionColor=new P("emission_color",a.v9.Black(),"vEmissionColor",3),this._emissionColorTexture=new F("emission_color","emissionColor","EMISSION_COLOR"),this._thinFilmWeight=new P("thin_film_weight",0,"vThinFilmWeight",1,0),this._thinFilmWeightTexture=new F("thin_film_weight","thinFilmWeight","THIN_FILM_WEIGHT"),this._thinFilmThickness=new P("thin_film_thickness",.5,"vThinFilmThickness",2,0),this._thinFilmThicknessMin=new P("thin_film_thickness_min",0,"vThinFilmThickness",2,1),this._thinFilmThicknessTexture=new F("thin_film_thickness","thinFilmThickness","THIN_FILM_THICKNESS"),this._thinFilmIor=new P("thin_film_ior",1.4,"vThinFilmIor",1,0),this._ambientOcclusionTexture=new F("ambient_occlusion","ambientOcclusion","AMBIENT_OCCLUSION"),this._uniformsList={},this._samplersList={},this._samplerDefines={},this.directIntensity=1,this.environmentIntensity=1,this.useSpecularWeightFromTextureAlpha=!1,this.forceAlphaTest=!1,this.alphaCutOff=.4,this.useAmbientOcclusionFromMetallicTextureRed=!1,this.useAmbientInGrayScale=!1,this.useObjectSpaceNormalMap=!1,this.useParallax=!1,this.useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this.disableLighting=!1,this.forceIrradianceInFragment=!1,this.maxSimultaneousLights=4,this.invertNormalMapX=!1,this.invertNormalMapY=!1,this.twoSidedLighting=!1,this.useAlphaFresnel=!1,this.useLinearAlphaFresnel=!1,this.environmentBRDFTexture=null,this.forceNormalForward=!1,this.enableSpecularAntiAliasing=!1,this.useHorizonOcclusion=!0,this.useRadianceOcclusion=!0,this.unlit=!1,this.applyDecalMapAfterDetailMap=!1,this._lightingInfos=new L.IU(this.directIntensity,1,this.environmentIntensity,1),this._radianceTexture=null,this._useSpecularWeightFromAlpha=!1,this._useSpecularWeightFromSpecularColorTexture=!1,this._useSpecularRoughnessAnisotropyFromTangentTexture=!1,this._useCoatRoughnessAnisotropyFromTangentTexture=!1,this._useGltfStyleAnisotropy=!1,this._useHorizonOcclusion=!0,this._useRadianceOcclusion=!0,this._useAlphaFromBaseColorTexture=!1,this._useAmbientOcclusionFromMetallicTextureRed=!1,this._useRoughnessFromMetallicTextureGreen=!1,this._useMetallicFromMetallicTextureBlue=!1,this._useThinFilmThicknessFromTextureGreen=!1,this._lightFalloff=_.i.LIGHTFALLOFF_PHYSICAL,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this._parallaxScaleBias=.05,this._disableLighting=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._alphaCutOff=.4,this._useAlphaFresnel=!1,this._useLinearAlphaFresnel=!1,this._environmentBRDFTexture=null,this._environmentFuzzBRDFTexture=null,this._forceIrradianceInFragment=!1,this._realTimeFiltering=!1,this._realTimeFilteringQuality=8,this._fuzzSampleNumber=4,this._forceNormalForward=!1,this._enableSpecularAntiAliasing=!1,this._renderTargets=new y.L(16),this._unlit=!1,this._applyDecalMapAfterDetailMap=!1,this._debugMode=0,this._shadersLoaded=!1,this._breakShaderLoadedCheck=!1,this.debugMode=0,this.debugLimit=-1,this.debugFactor=1,this._cacheHasRenderTargetTextures=!1,this._transparencyMode=_.i.MATERIAL_OPAQUE,this.getScene()&&!this.getScene()?.getEngine().isWebGPU&&this.getScene().getEngine().webGLVersion<2&&f.V.Error("OpenPBRMaterial: WebGL 2.0 or above is required for this material."),v._noiseTextures[this.getScene().uniqueId]||(v._noiseTextures[this.getScene().uniqueId]=new l.g("https://assets.babylonjs.com/textures/blue_noise/blue_noise_rgb.png",this.getScene(),!1,!0,1),this.getScene().onDisposeObservable.addOnce(()=>{v._noiseTextures[this.getScene().uniqueId]?.dispose(),delete v._noiseTextures[this.getScene().uniqueId]})),this._attachImageProcessingConfiguration(null),this.getRenderTargetTextures=()=>(this._renderTargets.reset(),d.h.ReflectionTextureEnabled&&this._radianceTexture&&this._radianceTexture.isRenderTarget&&this._renderTargets.push(this._radianceTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets),this._environmentBRDFTexture=(0,n.XX)(this.getScene()),this._environmentFuzzBRDFTexture=(0,n.KP)(this.getScene()),this.prePassConfiguration=new S.J,this._propertyList={},Object.getOwnPropertyNames(this))){const e=this[i];e instanceof P&&(this._propertyList[i]=e)}for(const e of(Object.keys(this._propertyList).forEach(e=>{let t=this._propertyList[e],s=this._uniformsList[t.targetUniformName];s?s.numComponents!==t.targetUniformComponentNum&&f.V.Error(`Uniform ${t.targetUniformName} already exists of size ${s.numComponents}, but trying to set it to ${t.targetUniformComponentNum}.`):(s=new M(t.targetUniformName,t.targetUniformComponentNum),this._uniformsList[t.targetUniformName]=s),s.linkedProperties[t.name]=t}),this._samplersList={},Object.getOwnPropertyNames(this))){const t=this[e];t instanceof F&&(this._samplersList[e]=t)}for(const e in this._samplersList){const t=this._samplersList[e].textureDefine;this._samplerDefines[t]={type:"boolean",default:!1},this._samplerDefines[t+"DIRECTUV"]={type:"number",default:0},this._samplerDefines[t+"_GAMMA"]={type:"boolean",default:!1}}this._baseWeight,this._baseWeightTexture,this._baseColor,this._baseColorTexture,this._baseDiffuseRoughness,this._baseDiffuseRoughnessTexture,this._baseMetalness,this._baseMetalnessTexture,this._specularWeight,this._specularWeightTexture,this._specularColor,this._specularColorTexture,this._specularRoughness,this._specularIor,this._specularRoughnessTexture,this._specularRoughnessAnisotropy,this._specularRoughnessAnisotropyTexture,this._coatWeight,this._coatWeightTexture,this._coatColor,this._coatColorTexture,this._coatRoughness,this._coatRoughnessTexture,this._coatRoughnessAnisotropy,this._coatRoughnessAnisotropyTexture,this._coatIor,this._coatDarkening,this._coatDarkeningTexture,this._fuzzWeight,this._fuzzWeightTexture,this._fuzzColor,this._fuzzColorTexture,this._fuzzRoughness,this._fuzzRoughnessTexture,this._geometryNormalTexture,this._geometryTangent,this._geometryTangentTexture,this._geometryCoatNormalTexture,this._geometryCoatTangent,this._geometryCoatTangentTexture,this._geometryOpacity,this._geometryOpacityTexture,this._thinFilmWeight,this._thinFilmWeightTexture,this._thinFilmThickness,this._thinFilmThicknessMin,this._thinFilmThicknessTexture,this._thinFilmIor,this._emissionLuminance,this._emissionColor,this._emissionColorTexture,this._ambientOcclusionTexture}get hasRenderTargetTextures(){return!!d.h.ReflectionTextureEnabled&&!!this._radianceTexture&&!!this._radianceTexture.isRenderTarget||this._cacheHasRenderTargetTextures}get isPrePassCapable(){return!this.disableDepthWrite}getClassName(){return"OpenPBRMaterial"}get transparencyMode(){return this._transparencyMode}set transparencyMode(e){this._transparencyMode!==e&&(this._transparencyMode=e,this._markAllSubMeshesAsTexturesAndMiscDirty())}_shouldUseAlphaFromBaseColorTexture(){return this._hasAlphaChannel()&&this._transparencyMode!==_.i.MATERIAL_OPAQUE&&!this.geometryOpacityTexture}_hasAlphaChannel(){return null!=this.baseColorTexture&&this.baseColorTexture.hasAlpha&&this._useAlphaFromBaseColorTexture||null!=this.geometryOpacityTexture}clone(e,t=!0,s=""){let i=T.p.Clone(()=>new v(e,this.getScene()),this,{cloneTexturesOnlyOnce:t});return i.id=e,i.name=e,this.stencil.copyTo(i.stencil),this._clonePlugins(i,s),i}serialize(){let e=super.serialize();return e.customType="BABYLON.OpenPBRMaterial",e}static Parse(e,t,s){let i=T.p.Parse(()=>new v(e.name,t),e,t,s);return e.stencil&&i.stencil.parse(e.stencil,t,s),_.i._ParsePlugins(e,i,t,s),i}forceCompilation(e,t,s){let i={clipPlane:!1,useInstances:!1,...s};this._uniformBufferLayoutBuilt||this.buildUniformLayout(),this._callbackPluginEventGeneric(4,this._eventInfo),(()=>{if(this._breakShaderLoadedCheck)return;let s=new b({...this._eventInfo.defineNames||{},...this._samplerDefines||{}}),r=this._prepareEffect(e,e,s,void 0,void 0,i.useInstances,i.clipPlane);this._onEffectCreatedObservable&&(N.effect=r,N.subMesh=null,this._onEffectCreatedObservable.notifyObservers(N)),r.isReady()?t&&t(this):r.onCompileObservable.add(()=>{t&&t(this)})})()}isReadyForSubMesh(e,t,s){this._uniformBufferLayoutBuilt||this.buildUniformLayout();let i=t._drawWrapper;if(i.effect&&this.isFrozen&&i._wasPreviouslyReady&&i._wasPreviouslyUsingInstances===s)return!0;t.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),t.materialDefines=new b({...this._eventInfo.defineNames||{},...this._samplerDefines||{}}));let r=t.materialDefines;if(this._isReadyForSubMesh(t))return!0;let n=this.getScene(),o=n.getEngine();if(r._areTexturesDirty&&(this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,n.texturesEnabled)){for(let e in this._samplersList){let t=this._samplersList[e];if(t.value&&!t.value.isReadyOrNotBlocking())return!1}let e=this._getRadianceTexture();if(e&&d.h.ReflectionTextureEnabled){if(!e.isReadyOrNotBlocking())return!1;if(e.irradianceTexture){if(!e.irradianceTexture.isReadyOrNotBlocking())return!1}else if(!e.sphericalPolynomial&&e.getInternalTexture()?._sphericalPolynomialPromise)return!1}if(this._environmentBRDFTexture&&d.h.ReflectionTextureEnabled&&!this._environmentBRDFTexture.isReady()||this._environmentFuzzBRDFTexture&&d.h.ReflectionTextureEnabled&&!this._environmentFuzzBRDFTexture.isReady()||v._noiseTextures[n.uniqueId]&&!v._noiseTextures[n.uniqueId].isReady())return!1}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=r,this._eventInfo.subMesh=t,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh||r._areImageProcessingDirty&&this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.isReady())return!1;if(r.AREALIGHTUSED){for(let t=0;t<e.lightSources.length;t++)if(!e.lightSources[t]._isReady())return!1}o.getCaps().standardDerivatives||e.isVerticesDataPresent(R.R.NormalKind)||(e.createNormals(!0),f.V.Warn("OpenPBRMaterial: Normals have been created for the mesh: "+e.name));let a=t.effect,h=r._areLightsDisposed,l=this._prepareEffect(e,t.getRenderingMesh(),r,this.onCompiled,this.onError,s,null),u=!1;if(l)if(this._onEffectCreatedObservable&&(N.effect=l,N.subMesh=t,this._onEffectCreatedObservable.notifyObservers(N)),this.allowShaderHotSwapping&&a&&!l.isReady()){if(l=a,r.markAsUnprocessed(),u=this.isFrozen,h)return r._areLightsDisposed=!0,!1}else n.resetCachedMaterial(),t.setEffect(l,r,this._materialContext);return!!t.effect&&!!t.effect.isReady()&&(r._renderId=n.getRenderId(),i._wasPreviouslyReady=!u,i._wasPreviouslyUsingInstances=!!s,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){let e=this._uniformBuffer;e.addUniform("vTangentSpaceParams",2),e.addUniform("vLightingIntensity",4),e.addUniform("pointSize",1),e.addUniform("vDebugMode",2),e.addUniform("cameraInfo",4),(0,c.G$)(e,!0,!0,!0,!0,!0),Object.values(this._uniformsList).forEach(t=>{e.addUniform(t.name,t.numComponents)}),Object.values(this._samplersList).forEach(t=>{e.addUniform(t.samplerInfoName,2),e.addUniform(t.samplerMatrixName,16)}),super.buildUniformLayout()}bindForSubMesh(e,t,s){let i=this.getScene(),r=s.materialDefines;if(!r)return;let n=s.effect;if(!n)return;this._activeEffect=n,t.getMeshUniformBuffer().bindToEffect(n,"Mesh"),t.transferToEffect(e);let h=i.getEngine();this._uniformBuffer.bindToEffect(n,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,i,t,e,this.isFrozen),E.m.Bind(h.currentRenderPassId,this._activeEffect,t,e,this);let l=i.activeCamera;l?this._uniformBuffer.updateFloat4("cameraInfo",l.minZ,l.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=s,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),r.OBJECTSPACE_NORMALMAP&&(e.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));let u=this._mustRebind(i,n,s,t.visibility);(0,c.f$)(t,this._activeEffect,this.prePassConfiguration);let _=null,T=this._uniformBuffer;if(u){if(this.bindViewProjection(n),_=this._getRadianceTexture(),!T.useUbo||!this.isFrozen||!T.isSync||s._drawWrapper._forceRebindOnNextCall){if(i.texturesEnabled){for(let e in this._samplersList){let t=this._samplersList[e];t.value&&(T.updateFloat2(t.samplerInfoName,t.value.coordinatesIndex,t.value.level),(0,c.mA)(t.value,T,t.samplerPrefix))}this.geometryNormalTexture&&(i._mirroredCameraPosition?T.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):T.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),(0,c.X8)(i,r,T,a.v9.White(),_,this.realTimeFiltering,!0,!0,!0,!0,!0)}this.pointsCloud&&T.updateFloat("pointSize",this.pointSize),Object.values(this._uniformsList).forEach(e=>{4===e.numComponents?(e.populateVectorFromLinkedProperties(L.AA.Vector4["0"]),T.updateVector4(e.name,L.AA.Vector4["0"])):3===e.numComponents?(e.populateVectorFromLinkedProperties(L.AA.Vector3["0"]),T.updateVector3(e.name,L.AA.Vector3["0"])):2===e.numComponents?(e.populateVectorFromLinkedProperties(L.AA.Vector2["0"]),T.updateFloat2(e.name,L.AA.Vector2["0"].x,L.AA.Vector2["0"].y)):1===e.numComponents&&T.updateFloat(e.name,e.linkedProperties[Object.keys(e.linkedProperties)[0]].value)}),this._lightingInfos.x=this.directIntensity,this._lightingInfos.y=this.emissionLuminance,this._lightingInfos.z=this.environmentIntensity*i.environmentIntensity,this._lightingInfos.w=1,T.updateVector4("vLightingIntensity",this._lightingInfos),T.updateFloat2("vDebugMode",this.debugLimit,this.debugFactor)}if(i.texturesEnabled){for(let e in this._samplersList){let t=this._samplersList[e];t.value&&T.setTexture(t.samplerName,t.value)}(0,c.Wp)(i,r,T,_,this.realTimeFiltering),r.ENVIRONMENTBRDF&&T.setTexture("environmentBrdfSampler",this._environmentBRDFTexture),r.FUZZENVIRONMENTBRDF&&T.setTexture("environmentFuzzBrdfSampler",this._environmentFuzzBRDFTexture),(r.ANISOTROPIC||r.FUZZ)&&T.setTexture("blueNoiseSampler",v._noiseTextures[this.getScene().uniqueId])}this.getScene().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(t)&&this.getScene().depthPeelingRenderer.bind(n),this._eventInfo.subMesh=s,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,p.ij)(this._activeEffect,this,i),this.bindEyePosition(n)}else i.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);(u||!this.isFrozen)&&(i.lightsEnabled&&!this._disableLighting&&(0,c.RL)(i,t,this._activeEffect,r,this._maxSimultaneousLights),(i.fogEnabled&&t.applyFog&&i.fogMode!==o.Z.FOGMODE_NONE||_||t.receiveShadows||r.PREPASS)&&this.bindView(n),(0,c.Yy)(i,t,this._activeEffect,!0),r.NUM_MORPH_INFLUENCERS&&(0,c.nR)(t,this._activeEffect),r.BAKED_VERTEX_ANIMATION_TEXTURE&&t.bakedVertexAnimationManager?.bind(n,r.INSTANCES),this._imageProcessingConfiguration.bind(this._activeEffect),(0,c.DL)(r,this._activeEffect,i)),this._afterBind(t,this._activeEffect,s),T.update()}getAnimatables(){let e=super.getAnimatables();for(let t in this._samplersList){let s=this._samplersList[t];s.value&&s.value.animations&&s.value.animations.length>0&&e.push(s.value)}return this._radianceTexture&&this._radianceTexture.animations&&this._radianceTexture.animations.length>0&&e.push(this._radianceTexture),e}getActiveTextures(){let e=super.getActiveTextures();for(let t in this._samplersList){let s=this._samplersList[t];s.value&&e.push(s.value)}return this._radianceTexture&&e.push(this._radianceTexture),e}hasTexture(e){if(super.hasTexture(e))return!0;for(let t in this._samplersList)if(this._samplersList[t].value===e)return!0;return this._radianceTexture===e}setPrePassRenderer(){return!1}dispose(e,t){if(this._breakShaderLoadedCheck=!0,t){for(let e in this._environmentBRDFTexture&&this.getScene().environmentBRDFTexture!==this._environmentBRDFTexture&&this._environmentBRDFTexture.dispose(),this._environmentFuzzBRDFTexture&&this.getScene().environmentFuzzBRDFTexture!==this._environmentFuzzBRDFTexture&&this._environmentFuzzBRDFTexture.dispose(),this._samplersList){let t=this._samplersList[e];t.value?.dispose()}this._radianceTexture?.dispose()}this._renderTargets.dispose(),this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(e,t)}_getRadianceTexture(){return this._radianceTexture?this._radianceTexture:this.getScene().environmentTexture}_prepareEffect(e,t,i,r=null,n=null,o=null,a=null){if(this._prepareDefines(e,t,i,o,a),!i.isDirty)return null;i.markAsProcessed();let l=this.getScene().getEngine(),u=new g.J,_=0;i.USESPHERICALINVERTEX&&u.addFallback(_++,"USESPHERICALINVERTEX"),i.FOG&&u.addFallback(_,"FOG"),i.SPECULARAA&&u.addFallback(_,"SPECULARAA"),i.POINTSIZE&&u.addFallback(_,"POINTSIZE"),i.LOGARITHMICDEPTH&&u.addFallback(_,"LOGARITHMICDEPTH"),i.PARALLAX&&u.addFallback(_,"PARALLAX"),i.PARALLAX_RHS&&u.addFallback(_,"PARALLAX_RHS"),i.PARALLAXOCCLUSION&&u.addFallback(_++,"PARALLAXOCCLUSION"),i.ENVIRONMENTBRDF&&u.addFallback(_++,"ENVIRONMENTBRDF"),i.TANGENT&&u.addFallback(_++,"TANGENT"),_=(0,c.c4)(i,u,this._maxSimultaneousLights,_++),i.SPECULARTERM&&u.addFallback(_++,"SPECULARTERM"),i.USESPHERICALFROMREFLECTIONMAP&&u.addFallback(_++,"USESPHERICALFROMREFLECTIONMAP"),i.USEIRRADIANCEMAP&&u.addFallback(_++,"USEIRRADIANCEMAP"),i.NORMAL&&u.addFallback(_++,"NORMAL"),i.VERTEXCOLOR&&u.addFallback(_++,"VERTEXCOLOR"),i.MORPHTARGETS&&u.addFallback(_++,"MORPHTARGETS"),i.MULTIVIEW&&u.addFallback(0,"MULTIVIEW");let T=[R.R.PositionKind];i.NORMAL&&T.push(R.R.NormalKind),i.TANGENT&&T.push(R.R.TangentKind);for(let e=1;e<=6;++e)i["UV"+e]&&T.push(`uv${1===e?"":e}`);i.VERTEXCOLOR&&T.push(R.R.ColorKind),(0,c.ni)(T,e,i,u),(0,c.ER)(T,i),(0,c.IF)(T,e,i),(0,c.J2)(T,e,i);let A="openpbr",m=["world","view","viewProjection","vEyePosition","vLightsType","visibility","vFogInfos","vFogColor","pointSize","mBones","normalMatrix","vLightingIntensity","logarithmicDepthConstant","vTangentSpaceParams","boneTextureWidth","vDebugMode","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"];for(let e in this._uniformsList)m.push(e);let d=["environmentBrdfSampler","blueNoiseSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"];for(let e in i.FUZZENVIRONMENTBRDF&&d.push("environmentFuzzBrdfSampler"),this._samplersList){let t=this._samplersList[e];d.push(t.samplerName),m.push(t.samplerInfoName),m.push(t.samplerMatrixName)}(0,c.B1)(m,d,!0);let f=["Material","Scene","Mesh"],C={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:i.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=u,this._eventInfo.fallbackRank=_,this._eventInfo.defines=i,this._eventInfo.uniforms=m,this._eventInfo.attributes=T,this._eventInfo.samplers=d,this._eventInfo.uniformBuffersNames=f,this._eventInfo.customCode=void 0,this._eventInfo.mesh=e,this._eventInfo.indexParameters=C,this._callbackPluginEventGeneric(128,this._eventInfo),E.m.AddUniformsAndSamplers(m,d),S.J.AddUniforms(m),S.J.AddSamplers(d),(0,p.Ll)(m),h.p&&(h.p.PrepareUniforms(m,i),h.p.PrepareSamplers(d,i)),(0,c.Bb)({uniformsNames:m,uniformBuffersNames:f,samplers:d,defines:i,maxSimultaneousLights:this._maxSimultaneousLights});let L={};this.customShaderNameResolve&&(A=this.customShaderNameResolve(A,m,f,d,i,T,L));let I=i.toString(),O=l.createEffect(A,{attributes:T,uniformsNames:m,uniformBuffersNames:f,samplers:d,defines:I,fallbacks:u,onCompiled:r,onError:n,indexParameters:C,processFinalCode:L.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:i.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this.shaderLanguage?await Promise.all([s.e("1971").then(s.bind(s,83390)),Promise.all([s.e("9476"),s.e("4143"),s.e("8205"),s.e("8353")]).then(s.bind(s,94760))]):await Promise.all([s.e("1844").then(s.bind(s,8543)),Promise.all([s.e("5673"),s.e("3216"),s.e("7751"),s.e("1267")]).then(s.bind(s,98494))]),this._shadersLoaded=!0}},l);return this._eventInfo.customCode=void 0,O}_prepareDefines(e,t,s,i=null,r=null){let o=t.hasThinInstances,a=this.getScene(),h=a.getEngine();(0,c.az)(a,e,s,!0,this._maxSimultaneousLights,this._disableLighting),s._needNormals=!0,(0,c.VO)(a,s);let l=this.needAlphaBlendingForMesh(e)&&this.getScene().useOrderIndependentTransparency;if((0,c.N4)(a,s,this.canRenderToMRT&&!l),(0,c.Nc)(a,s,l),E.m.PrepareDefines(h.currentRenderPassId,e,s),s.METALLICWORKFLOW=!0,s._areTexturesDirty){s._needUVs=!1;for(let e=1;e<=6;++e)s["MAINUV"+e]=!1;if(a.texturesEnabled){for(let e in this._samplersList){let t=this._samplersList[e];t.value?((0,c.YT)(t.value,s,t.textureDefine),s[t.textureDefine+"_GAMMA"]=t.value.gammaSpace):s[t.textureDefine]=!1}let e=this._getRadianceTexture(),t=this._forceIrradianceInFragment||this.realTimeFiltering||this._twoSidedLighting||h.getCaps().maxVaryingVectors<=8||null!=this._baseDiffuseRoughnessTexture;(0,c.kz)(a,e,s,this.realTimeFiltering,this.realTimeFilteringQuality,!t),this._baseMetalnessTexture&&(s.AOSTOREINMETALMAPRED=this._useAmbientOcclusionFromMetallicTextureRed),s.SPECULAR_WEIGHT_IN_ALPHA=this._useSpecularWeightFromAlpha,s.SPECULAR_WEIGHT_FROM_SPECULAR_COLOR_TEXTURE=this._useSpecularWeightFromSpecularColorTexture,s.SPECULAR_ROUGHNESS_ANISOTROPY_FROM_TANGENT_TEXTURE=this._useSpecularRoughnessAnisotropyFromTangentTexture,s.COAT_ROUGHNESS_ANISOTROPY_FROM_TANGENT_TEXTURE=this._useCoatRoughnessAnisotropyFromTangentTexture,s.ROUGHNESSSTOREINMETALMAPGREEN=this._useRoughnessFromMetallicTextureGreen,s.METALLNESSSTOREINMETALMAPBLUE=this._useMetallicFromMetallicTextureBlue,s.THIN_FILM_THICKNESS_FROM_THIN_FILM_TEXTURE=this._useThinFilmThicknessFromTextureGreen,this.geometryNormalTexture?(this._useParallax&&this.baseColorTexture&&d.h.DiffuseTextureEnabled?(s.PARALLAX=!0,s.PARALLAX_RHS=a.useRightHandedSystem,s.PARALLAXOCCLUSION=!!this._useParallaxOcclusion):s.PARALLAX=!1,s.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap):(s.PARALLAX=!1,s.PARALLAX_RHS=!1,s.PARALLAXOCCLUSION=!1,s.OBJECTSPACE_NORMALMAP=!1),this._environmentBRDFTexture&&d.h.ReflectionTextureEnabled?(s.ENVIRONMENTBRDF=!0,s.ENVIRONMENTBRDF_RGBD=this._environmentBRDFTexture.isRGBD):(s.ENVIRONMENTBRDF=!1,s.ENVIRONMENTBRDF_RGBD=!1),this._environmentFuzzBRDFTexture?s.FUZZENVIRONMENTBRDF=!0:s.FUZZENVIRONMENTBRDF=!1,this._shouldUseAlphaFromBaseColorTexture()?s.ALPHA_FROM_BASE_COLOR_TEXTURE=!0:s.ALPHA_FROM_BASE_COLOR_TEXTURE=!1}this._lightFalloff===_.i.LIGHTFALLOFF_STANDARD?(s.USEPHYSICALLIGHTFALLOFF=!1,s.USEGLTFLIGHTFALLOFF=!1):this._lightFalloff===_.i.LIGHTFALLOFF_GLTF?(s.USEPHYSICALLIGHTFALLOFF=!1,s.USEGLTFLIGHTFALLOFF=!0):(s.USEPHYSICALLIGHTFALLOFF=!0,s.USEGLTFLIGHTFALLOFF=!1),!this.backFaceCulling&&this._twoSidedLighting?s.TWOSIDEDLIGHTING=!0:s.TWOSIDEDLIGHTING=!1,s.MIRRORED=!!a._mirroredCameraPosition,s.SPECULARAA=h.getCaps().standardDerivatives&&this._enableSpecularAntiAliasing}(s._areTexturesDirty||s._areMiscDirty)&&(s.ALPHATESTVALUE=`${this._alphaCutOff}${this._alphaCutOff%1==0?".":""}`,s.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,s.ALPHABLEND=this.needAlphaBlendingForMesh(e)),s._areImageProcessingDirty&&this._imageProcessingConfiguration&&this._imageProcessingConfiguration.prepareDefines(s),s.FORCENORMALFORWARD=this._forceNormalForward,s.RADIANCEOCCLUSION=this._useRadianceOcclusion,s.HORIZONOCCLUSION=this._useHorizonOcclusion,(this.specularRoughnessAnisotropy>0||this.coatRoughnessAnisotropy>0)&&v._noiseTextures[a.uniqueId]&&d.h.ReflectionTextureEnabled?(s.ANISOTROPIC=!0,e.isVerticesDataPresent(R.R.TangentKind)||(s._needUVs=!0,s.MAINUV1=!0),this._useGltfStyleAnisotropy&&(s.USE_GLTF_STYLE_ANISOTROPY=!0),s.ANISOTROPIC_BASE=this.specularRoughnessAnisotropy>0,s.ANISOTROPIC_COAT=this.coatRoughnessAnisotropy>0):(s.ANISOTROPIC=!1,s.USE_GLTF_STYLE_ANISOTROPY=!1,s.ANISOTROPIC_BASE=!1,s.ANISOTROPIC_COAT=!1),s.THIN_FILM=this.thinFilmWeight>0,s.IRIDESCENCE=this.thinFilmWeight>0,s.FUZZ=this.fuzzWeight>0&&d.h.ReflectionTextureEnabled,s.FUZZ?(e.isVerticesDataPresent(R.R.TangentKind)||(s._needUVs=!0,s.MAINUV1=!0),this._environmentFuzzBRDFTexture=(0,n.KP)(this.getScene()),s.FUZZ_IBL_SAMPLES=this.fuzzSampleNumber):(this._environmentFuzzBRDFTexture=null,s.FUZZENVIRONMENTBRDF=!1,s.FUZZ_IBL_SAMPLES=0),s._areMiscDirty&&((0,c.fm)(e,a,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(e),s,this._applyDecalMapAfterDetailMap,this._useVertexPulling,t,this._isVertexOutputInvariant),s.UNLIT=this._unlit||(this.pointsCloud||this.wireframe)&&!e.isVerticesDataPresent(R.R.NormalKind),s.DEBUGMODE=this._debugMode),(0,c.OR)(a,h,this,s,!!i,r,o),this._eventInfo.defines=s,this._eventInfo.mesh=e,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,c.qB)(e,s,!0,!0,!0,this._transparencyMode!==_.i.MATERIAL_OPAQUE),this._callbackPluginEventPrepareDefines(this._eventInfo)}}v._noiseTextures={},v.ForceGLSL=!1,(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","baseWeight")],v.prototype,"_baseWeight",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","baseWeightTexture")],v.prototype,"_baseWeightTexture",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","baseColor")],v.prototype,"_baseColor",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","baseColorTexture")],v.prototype,"_baseColorTexture",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","baseDiffuseRoughness")],v.prototype,"_baseDiffuseRoughness",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","baseDiffuseRoughnessTexture")],v.prototype,"_baseDiffuseRoughnessTexture",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","baseMetalness")],v.prototype,"_baseMetalness",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","baseMetalnessTexture")],v.prototype,"_baseMetalnessTexture",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","specularWeight")],v.prototype,"_specularWeight",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","specularWeightTexture")],v.prototype,"_specularWeightTexture",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","specularColor")],v.prototype,"_specularColor",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","specularColorTexture")],v.prototype,"_specularColorTexture",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","specularRoughness")],v.prototype,"_specularRoughness",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","specularRoughnessTexture")],v.prototype,"_specularRoughnessTexture",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","specularRoughnessAnisotropy")],v.prototype,"_specularRoughnessAnisotropy",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","specularRoughnessAnisotropyTexture")],v.prototype,"_specularRoughnessAnisotropyTexture",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","specularIor")],v.prototype,"_specularIor",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","coatWeight")],v.prototype,"_coatWeight",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","coatWeightTexture")],v.prototype,"_coatWeightTexture",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","coatColor")],v.prototype,"_coatColor",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","coatColorTexture")],v.prototype,"_coatColorTexture",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","coatRoughness")],v.prototype,"_coatRoughness",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","coatRoughnessTexture")],v.prototype,"_coatRoughnessTexture",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","coatRoughnessAnisotropy")],v.prototype,"_coatRoughnessAnisotropy",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","coatRoughnessAnisotropyTexture")],v.prototype,"_coatRoughnessAnisotropyTexture",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","coatIor")],v.prototype,"_coatIor",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","coatDarkening")],v.prototype,"_coatDarkening",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","coatDarkeningTexture")],v.prototype,"_coatDarkeningTexture",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","fuzzWeight")],v.prototype,"_fuzzWeight",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","fuzzWeightTexture")],v.prototype,"_fuzzWeightTexture",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","fuzzColor")],v.prototype,"_fuzzColor",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","fuzzColorTexture")],v.prototype,"_fuzzColorTexture",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","fuzzRoughness")],v.prototype,"_fuzzRoughness",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","fuzzRoughnessTexture")],v.prototype,"_fuzzRoughnessTexture",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","geometryNormalTexture")],v.prototype,"_geometryNormalTexture",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","geometryTangent")],v.prototype,"_geometryTangent",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","geometryTangentTexture")],v.prototype,"_geometryTangentTexture",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","geometryCoatNormalTexture")],v.prototype,"_geometryCoatNormalTexture",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","geometryCoatTangent")],v.prototype,"_geometryCoatTangent",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","geometryCoatTangentTexture")],v.prototype,"_geometryCoatTangentTexture",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","geometryOpacity")],v.prototype,"_geometryOpacity",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","geometryOpacityTexture")],v.prototype,"_geometryOpacityTexture",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","emissionLuminance")],v.prototype,"_emissionLuminance",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","emissionColor")],v.prototype,"_emissionColor",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","emissionColorTexture")],v.prototype,"_emissionColorTexture",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","thinFilmWeight")],v.prototype,"_thinFilmWeight",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","thinFilmWeightTexture")],v.prototype,"_thinFilmWeightTexture",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","thinFilmThickness")],v.prototype,"_thinFilmThickness",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","thinFilmThicknessMin")],v.prototype,"_thinFilmThicknessMin",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","thinFilmThicknessTexture")],v.prototype,"_thinFilmThicknessTexture",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","thinFilmIor")],v.prototype,"_thinFilmIor",void 0),(0,i.Cg)([(0,r.ru)("_markAllSubMeshesAsTexturesDirty","ambientOcclusionTexture")],v.prototype,"_ambientOcclusionTexture",void 0),(0,i.Cg)([(0,r.lK)(),(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"directIntensity",void 0),(0,i.Cg)([(0,r.lK)(),(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"environmentIntensity",void 0),(0,i.Cg)([(0,r.lK)(),(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useSpecularWeightFromTextureAlpha",void 0),(0,i.Cg)([(0,r.lK)(),(0,r.$z)("_markAllSubMeshesAsTexturesAndMiscDirty")],v.prototype,"forceAlphaTest",void 0),(0,i.Cg)([(0,r.lK)(),(0,r.$z)("_markAllSubMeshesAsTexturesAndMiscDirty")],v.prototype,"alphaCutOff",void 0),(0,i.Cg)([(0,r.lK)(),(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useAmbientOcclusionFromMetallicTextureRed",void 0),(0,i.Cg)([(0,r.lK)(),(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useAmbientInGrayScale",void 0),(0,i.Cg)([(0,r.lK)()],v.prototype,"usePhysicalLightFalloff",null),(0,i.Cg)([(0,r.lK)()],v.prototype,"useGLTFLightFalloff",null),(0,i.Cg)([(0,r.lK)(),(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useObjectSpaceNormalMap",void 0),(0,i.Cg)([(0,r.lK)(),(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useParallax",void 0),(0,i.Cg)([(0,r.lK)(),(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useParallaxOcclusion",void 0),(0,i.Cg)([(0,r.lK)(),(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"parallaxScaleBias",void 0),(0,i.Cg)([(0,r.lK)(),(0,r.$z)("_markAllSubMeshesAsLightsDirty")],v.prototype,"disableLighting",void 0),(0,i.Cg)([(0,r.lK)(),(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"forceIrradianceInFragment",void 0),(0,i.Cg)([(0,r.lK)(),(0,r.$z)("_markAllSubMeshesAsLightsDirty")],v.prototype,"maxSimultaneousLights",void 0),(0,i.Cg)([(0,r.lK)(),(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"invertNormalMapX",void 0),(0,i.Cg)([(0,r.lK)(),(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"invertNormalMapY",void 0),(0,i.Cg)([(0,r.lK)(),(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"twoSidedLighting",void 0),(0,i.Cg)([(0,r.lK)(),(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useAlphaFresnel",void 0),(0,i.Cg)([(0,r.lK)(),(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useLinearAlphaFresnel",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"environmentBRDFTexture",void 0),(0,i.Cg)([(0,r.lK)(),(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"forceNormalForward",void 0),(0,i.Cg)([(0,r.lK)(),(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"enableSpecularAntiAliasing",void 0),(0,i.Cg)([(0,r.lK)(),(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useHorizonOcclusion",void 0),(0,i.Cg)([(0,r.lK)(),(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useRadianceOcclusion",void 0),(0,i.Cg)([(0,r.lK)(),(0,r.$z)("_markAllSubMeshesAsMiscDirty")],v.prototype,"unlit",void 0),(0,i.Cg)([(0,r.lK)(),(0,r.$z)("_markAllSubMeshesAsMiscDirty")],v.prototype,"applyDecalMapAfterDetailMap",void 0),(0,i.Cg)([(0,r.$z)("_markAllSubMeshesAsMiscDirty")],v.prototype,"debugMode",void 0),(0,i.Cg)([(0,r.lK)()],v.prototype,"transparencyMode",null),(0,u.Y5)("BABYLON.OpenPBRMaterial",v)}}]);