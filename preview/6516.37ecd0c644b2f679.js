/*
 *  This file is part of Cosmos Journeyer
 *
 *  Copyright (C) 2024 Barthélemy Paléologue <barth.paleologue@cosmosjourneyer.com>
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Affero General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Affero General Public License for more details.
 *
 *  You should have received a copy of the GNU Affero General Public License
 *  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

"use strict";(globalThis.webpackChunk_cosmos_journeyer_game=globalThis.webpackChunk_cosmos_journeyer_game||[]).push([["6516"],{30815:function(o,r,t){t.r(r),t.d(r,{FlowGraphAcoshBlock:()=>oh,FlowGraphSinhBlock:()=>os,FlowGraphEBlock:()=>B,FlowGraphAsinBlock:()=>ot,FlowGraphFloorBlock:()=>I,FlowGraphOneBitsCounterBlock:()=>oI,FlowGraphIsNanBlock:()=>Z,FlowGraphBitwiseXorBlock:()=>o_,FlowGraphSquareRootBlock:()=>oG,FlowGraphBitwiseAndBlock:()=>ok,FlowGraphModuloBlock:()=>b,FlowGraphPowerBlock:()=>oy,FlowGraphBitwiseRightShiftBlock:()=>ov,FlowGraphRandomBlock:()=>y,FlowGraphIsInfinityBlock:()=>K,FlowGraphAtan2Block:()=>ol,FlowGraphEqualityBlock:()=>q,FlowGraphPiBlock:()=>k,FlowGraphClampBlock:()=>$,FlowGraphBitwiseLeftShiftBlock:()=>of,FlowGraphNegationBlock:()=>T,FlowGraphCoshBlock:()=>on,FlowGraphBitwiseNotBlock:()=>oB,FlowGraphRadToDegBlock:()=>H,FlowGraphGreaterThanBlock:()=>j,FlowGraphTanBlock:()=>or,FlowGraphMaxBlock:()=>R,FlowGraphGreaterThanOrEqualBlock:()=>U,FlowGraphLessThanOrEqualBlock:()=>Q,FlowGraphTrailingZerosBlock:()=>oV,FlowGraphMinBlock:()=>C,FlowGraphSaturateBlock:()=>P,FlowGraphBitwiseOrBlock:()=>ox,FlowGraphSinBlock:()=>J,FlowGraphExpBlock:()=>ou,FlowGraphAddBlock:()=>F,FlowGraphLessThanBlock:()=>W,FlowGraphSubtractBlock:()=>d,FlowGraphAcosBlock:()=>oe,FlowGraphLeadingZerosBlock:()=>og,FlowGraphAtanhBlock:()=>oi,FlowGraphMathInterpolationBlock:()=>L,FlowGraphTanhBlock:()=>oc,FlowGraphDivideBlock:()=>m,FlowGraphAbsBlock:()=>v,FlowGraphInfBlock:()=>x,FlowGraphLogBlock:()=>ow,FlowGraphFractionBlock:()=>E,FlowGraphSignBlock:()=>g,FlowGraphDegToRadBlock:()=>X,FlowGraphRoundBlock:()=>Y,FlowGraphLog2Block:()=>oF,FlowGraphMultiplyBlock:()=>G,FlowGraphNaNBlock:()=>_,FlowGraphCosBlock:()=>oo,FlowGraphCeilBlock:()=>M,FlowGraphAtanBlock:()=>oa,FlowGraphAsinhBlock:()=>op,FlowGraphCubeRootBlock:()=>om,FlowGraphLog10Block:()=>od,FlowGraphTruncBlock:()=>V});var e=t(66717),a=t(3481),l=t(85203),s=t(49444);class n extends s.r{constructor(o,r,t,e){super(o,e),this._operation=r,this._className=t}_doOperation(o){return this._operation(o)}getClassName(){return this._className}}var c=t(66144),p=t(79711);class h extends s.r{constructor(o,r,t,e,a,l,s){super(e,s),this._operation=a,this._className=l,this.a=this.registerDataInput("a",o),this.b=this.registerDataInput("b",r),this.c=this.registerDataInput("c",t)}_doOperation(o){return this._operation(this.a.getValue(o),this.b.getValue(o),this.c.getValue(o))}getClassName(){return this._className}}var i=t(31897),u=t(74446),w=t(4129);class F extends l.W{constructor(o){super((0,a.Yd)(o?.type),(0,a.Yd)(o?.type),(0,a.Yd)(o?.type),(o,r)=>this._polymorphicAdd(o,r),"FlowGraphAddBlock",o)}_polymorphicAdd(o,r){let t=(0,w.I$)(o),e=(0,w.I$)(r);if((0,w.a2)(t,e)||(0,w.VW)(t,e)||(0,w.An)(t,e))return o.add(r);if("Quaternion"===t||"Vector4"===e)return new c.IU(o.x,o.y,o.z,o.w).addInPlace(r);if("Vector4"===t||"Quaternion"===e)return o.add(r);if(this.config?.preventIntegerFloatArithmetic&&typeof o!=typeof r)throw Error("Cannot add different types of numbers.");return(0,w.$w)(o)+(0,w.$w)(r)}}(0,e.Y5)("FlowGraphAddBlock",F);class d extends l.W{constructor(o){super((0,a.Yd)(o?.type),(0,a.Yd)(o?.type),(0,a.Yd)(o?.type),(o,r)=>this._polymorphicSubtract(o,r),"FlowGraphSubtractBlock",o)}_polymorphicSubtract(o,r){let t=(0,w.I$)(o),e=(0,w.I$)(r);if((0,w.a2)(t,e)||(0,w.An)(t,e)||(0,w.VW)(t,e))return o.subtract(r);if("Quaternion"===t||"Vector4"===e)return new c.IU(o.x,o.y,o.z,o.w).subtractInPlace(r);if("Vector4"===t||"Quaternion"===e)return o.subtract(r);if(this.config?.preventIntegerFloatArithmetic&&typeof o!=typeof r)throw Error("Cannot add different types of numbers.");return(0,w.$w)(o)-(0,w.$w)(r)}}(0,e.Y5)("FlowGraphSubtractBlock",d);class G extends l.W{constructor(o){super((0,a.Yd)(o?.type),(0,a.Yd)(o?.type),(0,a.Yd)(o?.type),(o,r)=>this._polymorphicMultiply(o,r),"FlowGraphMultiplyBlock",o)}_polymorphicMultiply(o,r){let t=(0,w.I$)(o),e=(0,w.I$)(r);if((0,w.a2)(t,e)||(0,w.An)(t,e))return o.multiply(r);if("Quaternion"===t||"Vector4"===e)return new c.IU(o.x,o.y,o.z,o.w).multiplyInPlace(r);if("Vector4"===t||"Quaternion"===e)return o.multiply(r);if((0,w.VW)(t,e))if(!this.config?.useMatrixPerComponent)return r.multiply(o);else{let e=o.m;for(let o=0;o<e.length;o++)e[o]*=r.m[o];return"Matrix2D"===t?new u.K(e):"Matrix3D"===t?new u.z(e):c.uq.FromArray(e)}if(this.config?.preventIntegerFloatArithmetic&&typeof o!=typeof r)throw Error("Cannot add different types of numbers.");return(0,w.$w)(o)*(0,w.$w)(r)}}(0,e.Y5)("FlowGraphMultiplyBlock",G);class m extends l.W{constructor(o){super((0,a.Yd)(o?.type),(0,a.Yd)(o?.type),(0,a.Yd)(o?.type),(o,r)=>this._polymorphicDivide(o,r),"FlowGraphDivideBlock",o)}_polymorphicDivide(o,r){let t=(0,w.I$)(o),e=(0,w.I$)(r);if((0,w.a2)(t,e)||(0,w.An)(t,e))return o.divide(r);if("Quaternion"===t||"Quaternion"===e){let t=o.clone();return t.x/=r.x,t.y/=r.y,t.z/=r.z,t.w/=r.w,t}if("Quaternion"===t||"Vector4"===e)return new c.IU(o.x,o.y,o.z,o.w).divideInPlace(r);if("Vector4"===t||"Quaternion"===e)return o.divide(r);if((0,w.VW)(t,e))if(!this.config?.useMatrixPerComponent)return o.divide(r);else{let e=o.m;for(let o=0;o<e.length;o++)e[o]/=r.m[o];return"Matrix2D"===t?new u.K(e):"Matrix3D"===t?new u.z(e):c.uq.FromArray(e)}else{if(this.config?.preventIntegerFloatArithmetic&&typeof o!=typeof r)throw Error("Cannot add different types of numbers.");return(0,w.$w)(o)/(0,w.$w)(r)}}}(0,e.Y5)("FlowGraphDivideBlock",m);class y extends n{constructor(o){super(a.Es,o=>this._random(o),"FlowGraphRandomBlock",o),this.min=this.registerDataInput("min",a.Es,o?.min??0),this.max=this.registerDataInput("max",a.Es,o?.max??1),o?.seed&&(this._seed=o.seed)}_isSeed(o=this._seed){return void 0!==o}_getRandomValue(){if(this._isSeed(this._seed)){let o=1e4*Math.sin(this._seed++);return o-Math.floor(o)}return Math.random()}_random(o){let r=this.min.getValue(o),t=this.max.getValue(o);return this._getRandomValue()*(t-r)+r}}(0,e.Y5)("FlowGraphRandomBlock",y);class B extends n{constructor(o){super(a.Es,()=>Math.E,"FlowGraphEBlock",o)}}(0,e.Y5)("FlowGraphEBlock",B);class k extends n{constructor(o){super(a.Es,()=>Math.PI,"FlowGraphPIBlock",o)}}(0,e.Y5)("FlowGraphPIBlock",k);class x extends n{constructor(o){super(a.Es,()=>1/0,"FlowGraphInfBlock",o)}}(0,e.Y5)("FlowGraphInfBlock",x);class _ extends n{constructor(o){super(a.Es,()=>NaN,"FlowGraphNaNBlock",o)}}function f(o,r){switch((0,w.I$)(o)){case"FlowGraphInteger":return new i.P(r(o.value));case"Vector2":return new c.I9(r(o.x),r(o.y));case"Vector3":return new c.Pq(r(o.x),r(o.y),r(o.z));case"Vector4":return new c.IU(r(o.x),r(o.y),r(o.z),r(o.w));case"Quaternion":return new c.PT(r(o.x),r(o.y),r(o.z),r(o.w));case"Matrix":return c.uq.FromArray(o.m.map(r));case"Matrix2D":return new u.K(o.m.map(r));case"Matrix3D":return new u.z(o.m.map(r));default:return r(o)}}(0,e.Y5)("FlowGraphNaNBlock",_);class v extends p.a{constructor(o){super(a.Es,a.Es,o=>this._polymorphicAbs(o),"FlowGraphAbsBlock",o)}_polymorphicAbs(o){return f(o,Math.abs)}}(0,e.Y5)("FlowGraphAbsBlock",v);class g extends p.a{constructor(o){super(a.Es,a.Es,o=>this._polymorphicSign(o),"FlowGraphSignBlock",o)}_polymorphicSign(o){return f(o,Math.sign)}}(0,e.Y5)("FlowGraphSignBlock",g);class V extends p.a{constructor(o){super(a.Es,a.Es,o=>this._polymorphicTrunc(o),"FlowGraphTruncBlock",o)}_polymorphicTrunc(o){return f(o,Math.trunc)}}(0,e.Y5)("FlowGraphTruncBlock",V);class I extends p.a{constructor(o){super(a.Es,a.Es,o=>this._polymorphicFloor(o),"FlowGraphFloorBlock",o)}_polymorphicFloor(o){return f(o,Math.floor)}}(0,e.Y5)("FlowGraphFloorBlock",I);class M extends p.a{constructor(o){super(a.Vv,a.Vv,o=>this._polymorphicCeiling(o),"FlowGraphCeilBlock",o)}_polymorphicCeiling(o){return f(o,Math.ceil)}}(0,e.Y5)("FlowGraphCeilBlock",M);class Y extends p.a{constructor(o){super(a.Vv,a.Vv,o=>this._polymorphicRound(o),"FlowGraphRoundBlock",o)}_polymorphicRound(o){return f(o,o=>o<0&&this.config?.roundHalfAwayFromZero?-Math.round(-o):Math.round(o))}}(0,e.Y5)("FlowGraphRoundBlock",Y);class E extends p.a{constructor(o){super(a.Vv,a.Vv,o=>this._polymorphicFraction(o),"FlowGraphFractBlock",o)}_polymorphicFraction(o){return f(o,o=>o-Math.floor(o))}}(0,e.Y5)("FlowGraphFractBlock",E);class T extends p.a{constructor(o){super(a.Vv,a.Vv,o=>this._polymorphicNeg(o),"FlowGraphNegationBlock",o)}_polymorphicNeg(o){return f(o,o=>-o)}}function A(o,r,t){switch((0,w.I$)(o)){case"FlowGraphInteger":return new i.P(t(o.value,r.value));case"Vector2":return new c.I9(t(o.x,r.x),t(o.y,r.y));case"Vector3":return new c.Pq(t(o.x,r.x),t(o.y,r.y),t(o.z,r.z));case"Vector4":return new c.IU(t(o.x,r.x),t(o.y,r.y),t(o.z,r.z),t(o.w,r.w));case"Quaternion":return new c.PT(t(o.x,r.x),t(o.y,r.y),t(o.z,r.z),t(o.w,r.w));case"Matrix":return c.uq.FromArray(o.m.map((o,e)=>t(o,r.m[e])));case"Matrix2D":return new u.K(o.m.map((o,e)=>t(o,r.m[e])));case"Matrix3D":return new u.z(o.m.map((o,e)=>t(o,r.m[e])));default:return t((0,w.$w)(o),(0,w.$w)(r))}}(0,e.Y5)("FlowGraphNegationBlock",T);class b extends l.W{constructor(o){super(a.Vv,a.Vv,a.Vv,(o,r)=>this._polymorphicRemainder(o,r),"FlowGraphModuloBlock",o)}_polymorphicRemainder(o,r){return A(o,r,(o,r)=>o%r)}}(0,e.Y5)("FlowGraphModuloBlock",b);class C extends l.W{constructor(o){super(a.Vv,a.Vv,a.Vv,(o,r)=>this._polymorphicMin(o,r),"FlowGraphMinBlock",o)}_polymorphicMin(o,r){return A(o,r,Math.min)}}(0,e.Y5)("FlowGraphMinBlock",C);class R extends l.W{constructor(o){super(a.Vv,a.Vv,a.Vv,(o,r)=>this._polymorphicMax(o,r),"FlowGraphMaxBlock",o)}_polymorphicMax(o,r){return A(o,r,Math.max)}}function S(o,r,t){return Math.min(Math.max(o,Math.min(r,t)),Math.max(r,t))}function N(o,r,t,e){switch((0,w.I$)(o)){case"FlowGraphInteger":return new i.P(e(o.value,r.value,t.value));case"Vector2":return new c.I9(e(o.x,r.x,t.x),e(o.y,r.y,t.y));case"Vector3":return new c.Pq(e(o.x,r.x,t.x),e(o.y,r.y,t.y),e(o.z,r.z,t.z));case"Vector4":return new c.IU(e(o.x,r.x,t.x),e(o.y,r.y,t.y),e(o.z,r.z,t.z),e(o.w,r.w,t.w));case"Quaternion":return new c.PT(e(o.x,r.x,t.x),e(o.y,r.y,t.y),e(o.z,r.z,t.z),e(o.w,r.w,t.w));case"Matrix":return c.uq.FromArray(o.m.map((o,a)=>e(o,r.m[a],t.m[a])));case"Matrix2D":return new u.K(o.m.map((o,a)=>e(o,r.m[a],t.m[a])));case"Matrix3D":return new u.z(o.m.map((o,a)=>e(o,r.m[a],t.m[a])));default:return e((0,w.$w)(o),(0,w.$w)(r),(0,w.$w)(t))}}(0,e.Y5)("FlowGraphMaxBlock",R);class $ extends h{constructor(o){super(a.Vv,a.Vv,a.Vv,a.Vv,(o,r,t)=>this._polymorphicClamp(o,r,t),"FlowGraphClampBlock",o)}_polymorphicClamp(o,r,t){return N(o,r,t,S)}}function D(o){return Math.min(Math.max(o,0),1)}(0,e.Y5)("FlowGraphClampBlock",$);class P extends p.a{constructor(o){super(a.Vv,a.Vv,o=>this._polymorphicSaturate(o),"FlowGraphSaturateBlock",o)}_polymorphicSaturate(o){return f(o,D)}}function z(o,r,t){return(1-t)*o+t*r}(0,e.Y5)("FlowGraphSaturateBlock",P);class L extends h{constructor(o){super(a.Vv,a.Vv,a.Vv,a.Vv,(o,r,t)=>this._polymorphicInterpolate(o,r,t),"FlowGraphMathInterpolationBlock",o)}_polymorphicInterpolate(o,r,t){return N(o,r,t,z)}}(0,e.Y5)("FlowGraphMathInterpolationBlock",L);class q extends l.W{constructor(o){super(a.Vv,a.Vv,a.RI,(o,r)=>this._polymorphicEq(o,r),"FlowGraphEqualityBlock",o)}_polymorphicEq(o,r){let t=(0,w.I$)(o),e=(0,w.I$)(r);return typeof o==typeof r&&((0,w.a2)(t,e)||(0,w.VW)(t,e)||(0,w.An)(t,e)?o.equals(r):o===r)}}function O(o,r,t){if((0,w.kf)(o)&&(0,w.kf)(r))return t((0,w.$w)(o),(0,w.$w)(r));throw Error(`Cannot compare ${o} and ${r}`)}(0,e.Y5)("FlowGraphEqualityBlock",q);class W extends l.W{constructor(o){super(a.Vv,a.Vv,a.RI,(o,r)=>this._polymorphicLessThan(o,r),"FlowGraphLessThanBlock",o)}_polymorphicLessThan(o,r){return O(o,r,(o,r)=>o<r)}}(0,e.Y5)("FlowGraphLessThanBlock",W);class Q extends l.W{constructor(o){super(a.Vv,a.Vv,a.RI,(o,r)=>this._polymorphicLessThanOrEqual(o,r),"FlowGraphLessThanOrEqualBlock",o)}_polymorphicLessThanOrEqual(o,r){return O(o,r,(o,r)=>o<=r)}}(0,e.Y5)("FlowGraphLessThanOrEqualBlock",Q);class j extends l.W{constructor(o){super(a.Vv,a.Vv,a.RI,(o,r)=>this._polymorphicGreaterThan(o,r),"FlowGraphGreaterThanBlock",o)}_polymorphicGreaterThan(o,r){return O(o,r,(o,r)=>o>r)}}(0,e.Y5)("FlowGraphGreaterThanBlock",j);class U extends l.W{constructor(o){super(a.Vv,a.Vv,a.RI,(o,r)=>this._polymorphicGreaterThanOrEqual(o,r),"FlowGraphGreaterThanOrEqualBlock",o)}_polymorphicGreaterThanOrEqual(o,r){return O(o,r,(o,r)=>o>=r)}}(0,e.Y5)("FlowGraphGreaterThanOrEqualBlock",U);class Z extends p.a{constructor(o){super(a.Vv,a.RI,o=>this._polymorphicIsNan(o),"FlowGraphIsNaNBlock",o)}_polymorphicIsNan(o){if((0,w.kf)(o,!0))return isNaN((0,w.$w)(o));throw Error(`Cannot get NaN of ${o}`)}}(0,e.Y5)("FlowGraphIsNaNBlock",Z);class K extends p.a{constructor(o){super(a.Vv,a.RI,o=>this._polymorphicIsInf(o),"FlowGraphIsInfBlock",o)}_polymorphicIsInf(o){if((0,w.kf)(o))return!isFinite((0,w.$w)(o));throw Error(`Cannot get isInf of ${o}`)}}(0,e.Y5)("FlowGraphIsInfBlock",K);class X extends p.a{constructor(o){super(a.Vv,a.Vv,o=>this._polymorphicDegToRad(o),"FlowGraphDegToRadBlock",o)}_degToRad(o){return o*Math.PI/180}_polymorphicDegToRad(o){return f(o,this._degToRad)}}(0,e.Y5)("FlowGraphDegToRadBlock",X);class H extends p.a{constructor(o){super(a.Vv,a.Vv,o=>this._polymorphicRadToDeg(o),"FlowGraphRadToDegBlock",o)}_radToDeg(o){return 180*o/Math.PI}_polymorphicRadToDeg(o){return f(o,this._radToDeg)}}(0,e.Y5)("FlowGraphRadToDegBlock",H);class J extends p.a{constructor(o){super(a.Es,a.Es,o=>this._polymorphicSin(o),"FlowGraphSinBlock",o)}_polymorphicSin(o){return f(o,Math.sin)}}class oo extends p.a{constructor(o){super(a.Es,a.Es,o=>this._polymorphicCos(o),"FlowGraphCosBlock",o)}_polymorphicCos(o){return f(o,Math.cos)}}class or extends p.a{constructor(o){super(a.Es,a.Es,o=>this._polymorphicTan(o),"FlowGraphTanBlock",o)}_polymorphicTan(o){return f(o,Math.tan)}}class ot extends p.a{constructor(o){super(a.Es,a.Es,o=>this._polymorphicAsin(o),"FlowGraphASinBlock",o)}_polymorphicAsin(o){return f(o,Math.asin)}}(0,e.Y5)("FlowGraphASinBlock",ot);class oe extends p.a{constructor(o){super(a.Es,a.Es,o=>this._polymorphicAcos(o),"FlowGraphACosBlock",o)}_polymorphicAcos(o){return f(o,Math.acos)}}(0,e.Y5)("FlowGraphACosBlock",oe);class oa extends p.a{constructor(o){super(a.Es,a.Es,o=>this._polymorphicAtan(o),"FlowGraphATanBlock",o)}_polymorphicAtan(o){return f(o,Math.atan)}}(0,e.Y5)("FlowGraphATanBlock",oa);class ol extends l.W{constructor(o){super(a.Vv,a.Vv,a.Vv,(o,r)=>this._polymorphicAtan2(o,r),"FlowGraphATan2Block",o)}_polymorphicAtan2(o,r){return A(o,r,Math.atan2)}}(0,e.Y5)("FlowGraphATan2Block",ol);class os extends p.a{constructor(o){super(a.Vv,a.Vv,o=>this._polymorphicSinh(o),"FlowGraphSinhBlock",o)}_polymorphicSinh(o){return f(o,Math.sinh)}}(0,e.Y5)("FlowGraphSinhBlock",os);class on extends p.a{constructor(o){super(a.Vv,a.Vv,o=>this._polymorphicCosh(o),"FlowGraphCoshBlock",o)}_polymorphicCosh(o){return f(o,Math.cosh)}}(0,e.Y5)("FlowGraphCoshBlock",on);class oc extends p.a{constructor(o){super(a.Vv,a.Vv,o=>this._polymorphicTanh(o),"FlowGraphTanhBlock",o)}_polymorphicTanh(o){return f(o,Math.tanh)}}(0,e.Y5)("FlowGraphTanhBlock",oc);class op extends p.a{constructor(o){super(a.Vv,a.Es,o=>this._polymorphicAsinh(o),"FlowGraphASinhBlock",o)}_polymorphicAsinh(o){return f(o,Math.asinh)}}(0,e.Y5)("FlowGraphASinhBlock",op);class oh extends p.a{constructor(o){super(a.Vv,a.Es,o=>this._polymorphicAcosh(o),"FlowGraphACoshBlock",o)}_polymorphicAcosh(o){return f(o,Math.acosh)}}(0,e.Y5)("FlowGraphACoshBlock",oh);class oi extends p.a{constructor(o){super(a.Vv,a.Es,o=>this._polymorphicAtanh(o),"FlowGraphATanhBlock",o)}_polymorphicAtanh(o){return f(o,Math.atanh)}}(0,e.Y5)("FlowGraphATanhBlock",oi);class ou extends p.a{constructor(o){super(a.Vv,a.Es,o=>this._polymorphicExp(o),"FlowGraphExponentialBlock",o)}_polymorphicExp(o){return f(o,Math.exp)}}(0,e.Y5)("FlowGraphExponentialBlock",ou);class ow extends p.a{constructor(o){super(a.Vv,a.Es,o=>this._polymorphicLog(o),"FlowGraphLogBlock",o)}_polymorphicLog(o){return f(o,Math.log)}}(0,e.Y5)("FlowGraphLogBlock",ow);class oF extends p.a{constructor(o){super(a.Vv,a.Es,o=>this._polymorphicLog2(o),"FlowGraphLog2Block",o)}_polymorphicLog2(o){return f(o,Math.log2)}}(0,e.Y5)("FlowGraphLog2Block",oF);class od extends p.a{constructor(o){super(a.Vv,a.Es,o=>this._polymorphicLog10(o),"FlowGraphLog10Block",o)}_polymorphicLog10(o){return f(o,Math.log10)}}(0,e.Y5)("FlowGraphLog10Block",od);class oG extends p.a{constructor(o){super(a.Vv,a.Es,o=>this._polymorphicSqrt(o),"FlowGraphSquareRootBlock",o)}_polymorphicSqrt(o){return f(o,Math.sqrt)}}(0,e.Y5)("FlowGraphSquareRootBlock",oG);class om extends p.a{constructor(o){super(a.Vv,a.Es,o=>this._polymorphicCubeRoot(o),"FlowGraphCubeRootBlock",o)}_polymorphicCubeRoot(o){return f(o,Math.cbrt)}}(0,e.Y5)("FlowGraphCubeRootBlock",om);class oy extends l.W{constructor(o){super(a.Vv,a.Es,a.Es,(o,r)=>this._polymorphicPow(o,r),"FlowGraphPowerBlock",o)}_polymorphicPow(o,r){return A(o,r,Math.pow)}}(0,e.Y5)("FlowGraphPowerBlock",oy);class oB extends p.a{constructor(o){super((0,a.Yd)(o?.valueType||"FlowGraphInteger"),(0,a.Yd)(o?.valueType||"FlowGraphInteger"),o=>"boolean"==typeof o?!o:"number"==typeof o?~o:new i.P(~o.value),"FlowGraphBitwiseNotBlock",o)}}(0,e.Y5)("FlowGraphBitwiseNotBlock",oB);class ok extends l.W{constructor(o){super((0,a.Yd)(o?.valueType||"FlowGraphInteger"),(0,a.Yd)(o?.valueType||"FlowGraphInteger"),(0,a.Yd)(o?.valueType||"FlowGraphInteger"),(o,r)=>{if("boolean"==typeof o&&"boolean"==typeof r)return o&&r;if("number"==typeof o&&"number"==typeof r)return o&r;if("object"==typeof o&&"object"==typeof r)return new i.P(o.value&r.value);throw Error(`Cannot perform bitwise AND on ${o} and ${r}`)},"FlowGraphBitwiseAndBlock",o)}}(0,e.Y5)("FlowGraphBitwiseAndBlock",ok);class ox extends l.W{constructor(o){super((0,a.Yd)(o?.valueType||"FlowGraphInteger"),(0,a.Yd)(o?.valueType||"FlowGraphInteger"),(0,a.Yd)(o?.valueType||"FlowGraphInteger"),(o,r)=>{if("boolean"==typeof o&&"boolean"==typeof r)return o||r;if("number"==typeof o&&"number"==typeof r)return o|r;if("object"==typeof o&&"object"==typeof r)return new i.P(o.value|r.value);throw Error(`Cannot perform bitwise OR on ${o} and ${r}`)},"FlowGraphBitwiseOrBlock",o)}}(0,e.Y5)("FlowGraphBitwiseOrBlock",ox);class o_ extends l.W{constructor(o){super((0,a.Yd)(o?.valueType||"FlowGraphInteger"),(0,a.Yd)(o?.valueType||"FlowGraphInteger"),(0,a.Yd)(o?.valueType||"FlowGraphInteger"),(o,r)=>{if("boolean"==typeof o&&"boolean"==typeof r)return o!==r;if("number"==typeof o&&"number"==typeof r)return o^r;if("object"==typeof o&&"object"==typeof r)return new i.P(o.value^r.value);throw Error(`Cannot perform bitwise XOR on ${o} and ${r}`)},"FlowGraphBitwiseXorBlock",o)}}(0,e.Y5)("FlowGraphBitwiseXorBlock",o_);class of extends l.W{constructor(o){super(a.x2,a.x2,a.x2,(o,r)=>new i.P(o.value<<r.value),"FlowGraphBitwiseLeftShiftBlock",o)}}(0,e.Y5)("FlowGraphBitwiseLeftShiftBlock",of);class ov extends l.W{constructor(o){super(a.x2,a.x2,a.x2,(o,r)=>new i.P(o.value>>r.value),"FlowGraphBitwiseRightShiftBlock",o)}}(0,e.Y5)("FlowGraphBitwiseRightShiftBlock",ov);class og extends p.a{constructor(o){super(a.x2,a.x2,o=>new i.P(Math.clz32(o.value)),"FlowGraphLeadingZerosBlock",o)}}(0,e.Y5)("FlowGraphLeadingZerosBlock",og);class oV extends p.a{constructor(o){super(a.x2,a.x2,o=>new i.P(o.value?31-Math.clz32(o.value&-o.value):32),"FlowGraphTrailingZerosBlock",o)}}(0,e.Y5)("FlowGraphTrailingZerosBlock",oV);class oI extends p.a{constructor(o){super(a.x2,a.x2,o=>new i.P(function(o){let r=0;for(;o;)r+=1&o,o>>=1;return r}(o.value)),"FlowGraphOneBitsCounterBlock",o)}}(0,e.Y5)("FlowGraphOneBitsCounterBlock",oI)},85203:function(o,r,t){t.d(r,{W:()=>a});var e=t(49444);class a extends e.r{constructor(o,r,t,e,a,l){super(t,l),this._operation=e,this._className=a,this.a=this.registerDataInput("a",o),this.b=this.registerDataInput("b",r)}_doOperation(o){let r=this.a.getValue(o),t=this.b.getValue(o);return this._operation(r,t)}getClassName(){return this._className}}},49444:function(o,r,t){t.d(r,{r:()=>n});var e=t(15559),a=t(3481);let l="cachedOperationValue",s="cachedExecutionId";class n extends e.e{constructor(o,r){super(r),this.value=this.registerDataOutput("value",o),this.isValid=this.registerDataOutput("isValid",a.RI)}_updateOutputs(o){let r=o._getExecutionVariable(this,s,-1),t=o._getExecutionVariable(this,l,null);if(null!=t&&r===o.executionId)this.isValid.setValue(!0,o),this.value.setValue(t,o);else try{let r=this._doOperation(o);if(null==r)return void this.isValid.setValue(!1,o);o._setExecutionVariable(this,l,r),o._setExecutionVariable(this,s,o.executionId),this.value.setValue(r,o),this.isValid.setValue(!0,o)}catch(r){this.isValid.setValue(!1,o)}}}},79711:function(o,r,t){t.d(r,{a:()=>a});var e=t(49444);class a extends e.r{constructor(o,r,t,e,a){super(r,a),this._operation=t,this._className=e,this.a=this.registerDataInput("a",o)}_doOperation(o){return this._operation(this.a.getValue(o))}getClassName(){return this._className}}}}]);