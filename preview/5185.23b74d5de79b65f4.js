"use strict";(globalThis.webpackChunkcosmos_journeyer=globalThis.webpackChunkcosmos_journeyer||[]).push([["5185"],{50280:function(e,t,s){s.r(t),s.d(t,{FlowGraphReceiveCustomEventBlock:()=>a});var o=s(71850),r=s(70541),n=s(46363),i=s(73683);class a extends o.N{constructor(e){for(let t in super(e),this.config=e,this.initPriority=1,this.config.eventData)this.registerDataOutput(t,this.config.eventData[t].type)}_preparePendingTasks(e){let t=e.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(t&&t.hasObservers()&&t.observers.length>i.l.MaxEventsPerType)return void this._reportError(e,`FlowGraphReceiveCustomEventBlock: Too many observers for event ${this.config.eventId}. Max is ${i.l.MaxEventsPerType}.`);let s=t.add(t=>{for(let s of Object.keys(t))this.getDataOutput(s)?.setValue(t[s],e);this._execute(e)});e._setExecutionVariable(this,"_eventObserver",s)}_cancelPendingTasks(e){let t=e.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(t){let s=e._getExecutionVariable(this,"_eventObserver",null);t.remove(s)}else r.w1.Warn(`FlowGraphReceiveCustomEventBlock: Missing observable for event ${this.config.eventId}`)}_executeEvent(e,t){return!0}getClassName(){return"FlowGraphReceiveCustomEventBlock"}}(0,n.H7)("FlowGraphReceiveCustomEventBlock",a)}}]);