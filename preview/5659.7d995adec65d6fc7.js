"use strict";(globalThis.webpackChunkcosmos_journeyer=globalThis.webpackChunkcosmos_journeyer||[]).push([["5659"],{17830:function(e,a,n){n.r(a),n.d(a,{Dispose:()=>f,DumpData:()=>c,DumpDataAsync:()=>d,DumpFramebuffer:()=>u,DumpTools:()=>g});var r=n(2037),t=n(28468),i=n(14265),s=n(63929),o=n(95023);let l=null;async function p(){let e=s.q.LastCreatedEngine?.createCanvas(100,100)??new OffscreenCanvas(100,100);e instanceof OffscreenCanvas&&o.V.Warn("DumpData: OffscreenCanvas will be used for dumping data. This may result in lossy alpha values.");let{ThinEngine:a}=await Promise.resolve().then(n.bind(n,50281));if(!a.IsSupported){if(!e.getContext("bitmaprenderer"))throw Error("DumpData: No WebGL or bitmap rendering context available. Cannot dump data.");return{canvas:e}}let t=new a(e,!1,{preserveDrawingBuffer:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1});s.q.Instances.pop(),s.q.OnEnginesDisposedObservable.add(e=>{t&&e!==t&&!t.isDisposed&&0===s.q.Instances.length&&f()}),t.getCaps().parallelShaderCompile=void 0;let i=new r.J(t),{passPixelShader:l}=await n.e("6623").then(n.bind(n,54114)),p=new r.$({engine:t,name:l.name,fragmentShader:l.shader,samplerNames:["textureSampler"]});return{canvas:e,dumpEngine:{engine:t,renderer:i,wrapper:p}}}async function m(){return l||(l=p()),await l}async function u(e,a,n,r,t="image/png",i,s){let o=new Uint8Array((await n.readPixels(0,0,e,a)).buffer);c(e,a,o,r,t,i,!0,void 0,s)}async function d(e,a,n,r="image/png",s,o=!1,l=!1,p){if(n instanceof Float32Array){let e=new Uint8Array(n.length),a=n.length;for(;a--;){let r=n[a];e[a]=Math.round(255*(0,i.Clamp)(r))}n=e}let u=await m();return await new Promise(async i=>{if(u.dumpEngine){let r=u.dumpEngine;r.engine.setSize(e,a,!0);let t=r.engine.createRawTexture(n,e,a,5,!1,!o,1);r.renderer.setViewport(),r.renderer.applyEffectWrapper(r.wrapper),r.wrapper.effect._bindTexture("textureSampler",t),r.renderer.draw(),t.dispose()}else{let r=u.canvas.getContext("bitmaprenderer");u.canvas.width=e,u.canvas.height=a;let t=new ImageData(e,a);t.data.set(n);let i=await createImageBitmap(t,{premultiplyAlpha:"none",imageOrientation:o?"flipY":"from-image"});r.transferFromImageBitmap(i)}t.S0.ToBlob(u.canvas,e=>{if(!e)throw Error("DumpData: Failed to convert canvas to blob.");void 0!==s&&t.S0.DownloadBlob(e,s);let a=new FileReader;a.onload=e=>{i(e.target.result)},l?a.readAsArrayBuffer(e):a.readAsDataURL(e)},r,p)})}function c(e,a,n,r,t="image/png",i,s=!1,o=!1,l){void 0!==i||r||(i=""),d(e,a,n,t,i,s,o,l).then(e=>{r&&r(e)})}function f(){l&&(l?.then(e=>{e.canvas instanceof HTMLCanvasElement&&e.canvas.remove(),e.dumpEngine&&(e.dumpEngine.engine.dispose(),e.dumpEngine.renderer.dispose(),e.dumpEngine.wrapper.dispose())}),l=null)}let g={DumpData:c,DumpDataAsync:d,DumpFramebuffer:u,Dispose:f};t.S0.DumpData=c,t.S0.DumpDataAsync=d,t.S0.DumpFramebuffer=u}}]);