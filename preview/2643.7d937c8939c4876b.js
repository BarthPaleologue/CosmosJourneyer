"use strict";(globalThis.webpackChunkcosmos_journeyer=globalThis.webpackChunkcosmos_journeyer||[]).push([["2643"],{91150:function(t,e,i){i.r(e),i.d(e,{FlowGraphThrottleBlock:()=>r});var a=i(87166),s=i(29528),n=i(358);class r extends s.w{constructor(t){super(t),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",a.Es),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",a.Es,NaN)}_execute(t,e){if(e===this.reset){this.lastRemainingTime.setValue(NaN,t),t._setExecutionVariable(this,"lastRemainingTime",NaN),t._setExecutionVariable(this,"timestamp",0);return}let i=this.duration.getValue(t);if(i<=0||isNaN(i)||!isFinite(i))return this._reportError(t,"Invalid duration in Throttle block");let a=t._getExecutionVariable(this,"lastRemainingTime",NaN),s=Date.now();if(isNaN(a))return this.lastRemainingTime.setValue(0,t),t._setExecutionVariable(this,"lastRemainingTime",0),t._setExecutionVariable(this,"timestamp",s),this.out._activateSignal(t);{let e=s-t._getExecutionVariable(this,"timestamp",0),a=1e3*i;if(a<=e)return this.lastRemainingTime.setValue(0,t),t._setExecutionVariable(this,"lastRemainingTime",0),t._setExecutionVariable(this,"timestamp",s),this.out._activateSignal(t);{let i=a-e;this.lastRemainingTime.setValue(i/1e3,t),t._setExecutionVariable(this,"lastRemainingTime",i)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,n.Y5)("FlowGraphThrottleBlock",r)}}]);