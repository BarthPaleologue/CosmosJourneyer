name: e2e
on:
    push:
        branches: [main]
    pull_request:
        branches: [main]
    workflow_dispatch:

jobs:
    playwright-e2e:
        runs-on: ubuntu-latest

        steps:
            # 1 ─────────── repo + LFS
            - uses: actions/checkout@v4 # ⬇ repo
              with: #    + LFS blobs
                  lfs: true #   (LFS support)
                  fetch-depth: 0 #    (helps LFS cache hits)

            - name: Cache Git-LFS objects
              uses: actions/cache@v4
              with:
                  path: ~/.git/lfs/ # default client cache
                  key: lfs-${{ runner.os }}-${{ hashFiles('.gitattributes') }}

            # 2 ─────────── build test image (local load, no push)
            - name: Build Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  tags: cosmos-journeyer-e2e:${{ github.sha }}
                  load: true # load into the runner’s daemon
                  build-args: |
                      PW_VERSION=1.52.0

            # 3 ─────────── run Playwright
            - name: Run Playwright suite
              run: |
                  mkdir -p artifacts                 # host dir for reports / diffs
                  docker run --rm --ipc=host -e CI=1 \
                    -v ${{ github.workspace }}/tests/e2e:/app/tests/e2e \
                    -v ${{ github.workspace }}/artifacts:/output \
                    cosmos-journeyer-e2e:${{ github.sha }} \
                    npx playwright test \
                        --output=/output \
                        --reporter=line,html

            # 4 ─────────── publish results
            - name: Upload HTML report
              if: always() # even on failure
              uses: actions/upload-artifact@v4
              with:
                  name: playwright-report
                  path: artifacts/playwright-report

            - name: Upload raw diffs (only on failure)
              if: failure()
              uses: actions/upload-artifact@v4
              with:
                  name: test-results
                  path: artifacts/test-results
