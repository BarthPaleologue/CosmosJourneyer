"use strict";(globalThis.webpackChunkcosmos_journeyer=globalThis.webpackChunkcosmos_journeyer||[]).push([["8978"],{23207:function(e,n,a){let r;a.r(n),a.d(n,{Dispose:()=>f,DumpData:()=>u,DumpDataAsync:()=>d,DumpFramebuffer:()=>c,DumpTools:()=>m});var t=a(19956),s=a(70541),i=a(16891),l=a(65098);let p=null;async function o(){return p||(p=new Promise((e,n)=>{let s,i=null,p={preserveDrawingBuffer:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(a.bind(a,66588)).then(({ThinEngine:o})=>{let c=l.l.Instances.length;try{s=new OffscreenCanvas(100,100),i=new o(s,!1,p)}catch(e){c<l.l.Instances.length&&l.l.Instances.pop()?.dispose(),i=new o(s=document.createElement("canvas"),!1,p)}l.l.Instances.pop(),l.l.OnEnginesDisposedObservable.add(e=>{i&&e!==i&&!i.isDisposed&&0===l.l.Instances.length&&f()}),i.getCaps().parallelShaderCompile=void 0;let d=new t.I(i);a.e("395").then(a.bind(a,35066)).then(({passPixelShader:a})=>{if(!i)return void n("Engine is not defined");let l=new t.H({engine:i,name:a.name,fragmentShader:a.shader,samplerNames:["textureSampler"]});e(r={canvas:s,engine:i,renderer:d,wrapper:l})})}).catch(n)})),await p}async function c(e,n,a,r,t="image/png",s,i){let l=new Uint8Array((await a.readPixels(0,0,e,n)).buffer);u(e,n,l,r,t,s,!0,void 0,i)}async function d(e,n,a,r="image/png",t,s=!1,i=!1,l){return await new Promise(p=>{u(e,n,a,e=>p(e),r,t,s,i,l)})}function u(e,n,a,r,t="image/png",l,p=!1,c=!1,d){o().then(o=>{if(o.engine.setSize(e,n,!0),a instanceof Float32Array){let e=new Uint8Array(a.length),n=a.length;for(;n--;){let r=a[n];e[n]=Math.round(255*(0,i.Clamp)(r))}a=e}let u=o.engine.createRawTexture(a,e,n,5,!1,!p,1);o.renderer.setViewport(),o.renderer.applyEffectWrapper(o.wrapper),o.wrapper.effect._bindTexture("textureSampler",u),o.renderer.draw(),c?s.w1.ToBlob(o.canvas,e=>{let n=new FileReader;n.onload=e=>{let n=e.target.result;r&&r(n)},n.readAsArrayBuffer(e)},t,d):s.w1.EncodeScreenshotCanvasData(o.canvas,r,t,l,d),u.dispose()})}function f(){r?(r.wrapper.dispose(),r.renderer.dispose(),r.engine.dispose()):p?.then(e=>{e.wrapper.dispose(),e.renderer.dispose(),e.engine.dispose()}),p=null,r=null}let m={DumpData:u,DumpDataAsync:d,DumpFramebuffer:c,Dispose:f};s.w1.DumpData=u,s.w1.DumpDataAsync=d,s.w1.DumpFramebuffer=c}}]);